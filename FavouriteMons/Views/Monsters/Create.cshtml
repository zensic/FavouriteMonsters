@model FavouriteMons.Models.Monsters

@{
  ViewData["Title"] = "Create a Monster";
}

<h2>Create a new Monster</h2>

<hr />
<div class="row">
  <form asp-action="Create" method="Post" enctype="multipart/form-data">
    <div class="new-monster-con">
      <div class="new-monster-img-con">
        <img id="new-monster-image" src="~/images/no_image_square.jpg" class="new-monster-img" alt="Monster Image" />
        <label for="fileupload" class="btn btn-primary monster-upload">
          Upload Image
        </label>
        <input id="fileupload" type="file" name="images" accept="image/gif, image/jpeg, image/png">
      </div>
      <div class="monster-details-con">
        <div class="mons-name-con">
          <input asp-for="Name" placeholder="Name" class="mons-create-name" />
          <select asp-for="ElementId" asp-items="@ViewBag.types" class="mons-create-dropdown"></select>
        </div>
        <div class="mons-stats-con">
          <label asp-for="HP" class="control-label"></label>
          <input asp-for="HP" class="form-range" type="range" min="1" max="255" />

          <label asp-for="Attack" class="control-label"></label>
          <input asp-for="Attack" class="form-range" type="range" min="1" max="255" />

          <label asp-for="Defence" class="control-label"></label>
          <input asp-for="Defence" class="form-range" type="range" min="1" max="255" />

          <label asp-for="Speed" class="control-label"></label>
          <input asp-for="Speed" class="form-range" type="range" min="1" max="255" />
          <input type="submit" value="Create" class="btn btn-success w-100" />
        </div>
      </div>
    </div>
  </form>
</div>

@section Scripts {
  @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
  }
  <script>
    // Grabs file from file upload input, populates it into img component
    const readURL = input => {

        // Check if any files were selected
        if (input.files && input.files[0]) {

            // Initialize JS file readre
            var reader = new FileReader();

            // Target the image tag after the reader loads
            reader.onload = e => {
                $('#new-monster-image').attr('src', e.target.result);
            }

            // Set the input file to the target image tag
            reader.readAsDataURL(input.files[0]);
        }
    }

    // Listens to changes from file upload file
    $("#fileupload").change(function () {
        readURL(this);
    });
  </script>
}