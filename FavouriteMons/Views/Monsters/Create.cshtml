@model FavouriteMons.Models.Monsters

@{
    ViewData["Title"] = "Create a Monster";
}

<h1>Create a new Monster</h1>

<hr />
<div class="row">
    <form asp-action="Create" method="Post" enctype="multipart/form-data">
        <div class="new-monster-con">
            <div class="new-monster-img-con">
                <img id="new-monster-image" src="~/images/no_image_square.jpg" class="new-monster-img" alt="Monster Image" />
                <label class="btn btn-success w-100">
                    <input id="fileupload" type="file" name="images" accept="image/gif, image/jpeg, image/png">
                    Upload Monster Image
                </label>
            </div>
            <div>
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <label asp-for="Element" class="control-label"></label>
                <select asp-for="Element" class="form-control" asp-items="@ViewBag.types"></select>
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Grabs file from file upload input, populates it into img component 
        const readURL = input => {
            // Check if any files were selected
            if (input.files && input.files[0]) {

                // Initialize JS file readre
                var reader = new FileReader();

                // Target the image tag after the reader loads
                reader.onload = e => {
                    $('#new-monster-image').attr('src', e.target.result);
                }

                // Set the input file to the target image tag
                reader.readAsDataURL(input.files[0]);
            }
        }

        // Listens to changes from file upload file
        $("#fileupload").change(function() {
            readURL(this);
        });
    </script>
}